@persist LIB_DIALOG_INTERNAL_Table:table

#[
    WIP
    Library made to make prolonged dialogs. (Useful for making speeches, some form of TTS, advanced sounds, etc).
    How to use:
    soundRow("Test", array( <-- Registers a new sound with ID "Test"
        "ambient/misc/carhonk1.wav", <-- Adds new sound
        "ambient/misc/flush1.wav" <-- Adds new sound
        ),
        array(
        1200, <-- Tells how long should the first sound be
        5000 <-- Tells how long should the second sound be
        ),
        0 <-- Tells that sound should NOT be looped
    )

    soundRowPlay("Test") <-- Executes the sound.

    ###################################
    ##           DialogLib           ##
    ##      made by deltamolfar      ##
    ##        Glory to Ukraine       ##
    ###################################

    This chip can be freely distributed between anyone you want, as long, as you keep the author credits.
    If you want to change something, and help others, feel free to create an issue/PR.
]#

if( first() || duped() ){
    LIB_DIALOG_INTERNAL_Table = table()
}

function addSoundRowSound(Name:string, Path:string, Duration:number, Pitch:number, SoundLevel:number, Volume:number){
    LIB_DIALOG_INTERNAL_Table[Name, table]["PATH", array]:pushString(Path)
    LIB_DIALOG_INTERNAL_Table[Name, table]["DELAY", array]:pushNumber(Duration)
    LIB_DIALOG_INTERNAL_Table[Name, table]["PITCH", array]:pushNumber(Pitch)
    LIB_DIALOG_INTERNAL_Table[Name, table]["SOUND_LEVEL", array]:pushNumber(SoundLevel)
    LIB_DIALOG_INTERNAL_Table[Name, table]["VOLUME", array]:pushNumber(clamp(Volume, 0, 1))
}

function addSoundRowSound(Name:string, Path:string, Duration:number, Pitch:number, SoundLevel:number){
    addSoundRowSound(Name, Path, Duration, Pitch, SoundLevel, 1)
}

function addSoundRowSound(Name:string, Path:string, Duration:number, Pitch:number){
    addSoundRowSound(Name, Path, Duration, Pitch, 100, 1)
}

function addSoundRowSound(Name:string, Path:string, Duration:number){
    addSoundRowSound(Name, Path, Duration, 100, 100, 1)
}

function soundRow(Name:string){
    assert(Name!="", "soundRow(...) -> You can't register sound object with no name!")

    LIB_DIALOG_INTERNAL_Table[Name, table] = table(
        "CurrentSound" = 1,
        "IsPlaying" = 0,
        "SoundOrigin" = noentity(),
        "Loop" = 0,
        "PATH" = array(),
        "DELAY" = array(),
        "PITCH" = array(),
        "SOUND_LEVEL" = array(),
        "VOLUME" = array()
    )
}

function soundRow(Name:string, Looping:number){
    soundRow(Name)
    LIB_DIALOG_INTERNAL_Table[Name, table]["Loop", number] = Looping
}

function soundRow(Name:string, Paths:array, Durations:array){
    soundRow(Name)

    assert( Paths:count()==Durations:count(), "soundRow(NR) -> You can't pass different number of sound paths and durations!" )

    for(I=1, Paths:count()){
        addSoundRowSound(Name, Paths[I, string], Durations[I, number])
    }
}

function soundRow(Name:string, Paths:array, Durations:array, Looping:number){
    soundRow(Name, Paths, Durations)
    LIB_DIALOG_INTERNAL_Table[Name, table]["Loop", number] = Looping
}

function soundRow_setLooping(Name:string, Value:number){
    assert(LIB_DIALOG_INTERNAL_Table[Name, table]:count()==0, "soundRow_setLooping(SN) -> You can't play sound object with no sounds!")

    LIB_DIALOG_INTERNAL_Table[Name, table]["Loop", number] = Value
}

function soundRowPlay(Name:string){
    assert(LIB_DIALOG_INTERNAL_Table[Name, table]:count()!=0, "soundRowPlay(S) -> You can't play sound object with no sounds!")
    LIB_DIALOG_INTERNAL_Table[Name, table]["SoundOrigin", entity] = noentity()
    LIB_DIALOG_INTERNAL_Table[Name, table]["IsPlaying", number] = 1

    timer("_SOUNDROW_"+Name, 5)
}

function entity:soundRowPlay(Name:string){
    assert(LIB_DIALOG_INTERNAL_Table[Name, table]:count()==0, "soundRowPlay(S) -> You can't play sound object with no sounds!")
    assert(This:isValid(), "Sound parent isn't valid!")

    soundRowPlay(Name)

    LIB_DIALOG_INTERNAL_Table[Name, table]["SoundOrigin", entity] = This
}

function soundRowStop(Name:string){
    local SoundRowTable = LIB_DIALOG_INTERNAL_Table[Name, table]
    assert(SoundRowTable:count()!=0, "soundRowStop(S) -> You can't stop sound object from playing with no sounds!")

    local Origin = entity()
    if( SoundRowTable["SoundOrigin", entity]:isValid() ){
        Origin = SoundRowTable["SoundOrigin", entity]
    }

    foreach(_:number, V:string = SoundRowTable["PATH", array]){
        Origin:emitSoundStop(V)
    }
}

if( LIB_DIALOG_INTERNAL_Table[clkName():replace("_SOUNDROW_", ""), table]:count()!=0 ){
    local SoundRowTable = LIB_DIALOG_INTERNAL_Table[clkName():replace("_SOUNDROW_", ""), table]
    local TimerDelay = 1
    if( !SoundRowTable["IsPlaying", number] ){ exit() }

    if( SoundRowTable["CurrentSound", number]>SoundRowTable["PATH", array]:count() ){
        if( SoundRowTable["Loop", number] ){
            SoundRowTable["CurrentSound", number] = 1
        } else{
            exit()
        }
    } else{
        local EmitEntity = entity()
        if( SoundRowTable["SoundOrigin", entity]:isValid() ){
            EmitEntity = SoundRowTable["SoundOrigin", entity]
        }

        EmitEntity:emitSound(
            SoundRowTable["PATH", array][SoundRowTable["CurrentSound", number], string],
            SoundRowTable["SOUND_LEVEL", array][SoundRowTable["CurrentSound", number], number],
            SoundRowTable["PITCH", array][SoundRowTable["CurrentSound", number], number],
            SoundRowTable["VOLUME", array][SoundRowTable["CurrentSound", number], number]
        )

        TimerDelay = SoundRowTable["DELAY", array][SoundRowTable["CurrentSound", number], number]
        SoundRowTable["CurrentSound", number] = SoundRowTable["CurrentSound", number]+1
    }

    timer("_SOUNDROW_"+clkName(), TimerDelay)
}

if( first() ){
    soundRow("Test", array(
        "ambient/misc/carhonk1.wav",
        "ambient/misc/flush1.wav"
        ),
        array(1200, 5000),
        0
    )

    soundRowPlay("Test")
}

event removed(Resetting:number) {
    foreach(V:string, _:table = LIB_DIALOG_INTERNAL_Table){
        soundRowStop(V)
    }
}


